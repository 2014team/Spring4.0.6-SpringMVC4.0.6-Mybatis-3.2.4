<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
		default-autowire="byName">
	
	<!-- 声明式事务失效,原因
	根本原因：由子容器扫描装配了@Service 注解的实例。
	spring的context是父子容器，由ServletContextListener 
	加载spring配置文件产生的是父容器，springMVC加载配置文件产生的是子容器，
	子容器对Controller进行扫描装配时装配了@Service注解的实例 (@Controller 实例依赖@Service实例)，
	而该实例理应由父容器进行初始化以保证事务的增强处理，所以此时得到的将是原样的Service
	（没有经过事务加强处理，故而没有事务处理能力 -->
	<context:component-scan base-package="com.ssm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	

	 <!-- 配置JSTL视图解析器 -->  
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
			p:prefix="/WEB-INF/page/" p:suffix=".jsp" />

	<!-- 静态资源文件设置 -->	
	<mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/upload/**" location="/upload/" />
   
</beans>
